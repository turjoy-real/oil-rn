{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport User from \"../../models/User\";\nexport var SET_USERS = \"SET_USERS\";\nexport var CREATE_USER = \"CREATE_USER\";\nexport var UPDATE_USER = \"UPDATE_USER\";\nexport var fetchUsers = function fetchUsers() {\n  return function _callee(dispatch) {\n    var response, resData, loadedUsers, key;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"https://my-json-server.typicode.com/turjoy-real/data/users\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.data);\n\n          case 6:\n            resData = _context.sent;\n            console.log(Date());\n            loadedUsers = [];\n\n            for (key in resData) {\n              loadedUsers.push(new User(key, resData[key].userName, resData[key].age, resData[key].address, resData[key].activity));\n            }\n\n            dispatch({\n              type: SET_USERS,\n              users: loadedUsers\n            });\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n};\nexport var createUser = function createUser(userName, age, address, activity) {\n  return function _callee2(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"https://my-json-server.typicode.com/turjoy-real/data/users\", {\n              userName: userName,\n              age: age,\n              address: address,\n              activity: activity\n            }));\n\n          case 2:\n            response = _context2.sent;\n            console.log(\"create\", response.data.id);\n            dispatch({\n              type: CREATE_USER,\n              eid: response.data.id,\n              userData: {\n                userName: userName,\n                age: age,\n                address: address,\n                activity: activity\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var updateUser = function updateUser(id, userName, age, address, activity) {\n  return function _callee3(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(axios.patch(\"https://my-json-server.typicode.com/turjoy-real/data/users/\" + id, {\n              userName: userName,\n              age: age,\n              address: address,\n              activity: activity\n            }));\n\n          case 2:\n            response = _context3.sent;\n            console.log(response);\n            console.log(\"update\", response.data.id);\n            dispatch({\n              type: UPDATE_USER,\n              eid: id,\n              userData: {\n                userName: userName,\n                age: age,\n                address: address,\n                activity: activity\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/turjoy/Desktop/Oil project/store/actions/users.js"],"names":["axios","User","SET_USERS","CREATE_USER","UPDATE_USER","fetchUsers","dispatch","get","response","data","resData","console","log","Date","loadedUsers","key","push","userName","age","address","activity","type","users","createUser","post","id","eid","userData","updateUser","patch"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport User from \"../../models/User\";\n\nexport const SET_USERS = \"SET_USERS\";\nexport const CREATE_USER = \"CREATE_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const fetchUsers = () => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(\n        \"https://my-json-server.typicode.com/turjoy-real/data/users\"\n      );\n\n      const resData = await response.data;\n      // console.log(resData);\n      console.log(Date());\n\n      const loadedUsers = [];\n\n      for (const key in resData) {\n        loadedUsers.push(\n          new User(\n            key,\n            resData[key].userName,\n            resData[key].age,\n            resData[key].address,\n            resData[key].activity\n          )\n        );\n      }\n\n      dispatch({\n        type: SET_USERS,\n        users: loadedUsers,\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n};\n\nexport const createUser = (userName, age, address, activity) => {\n  return async (dispatch) => {\n    const response = await axios.post(\n      \"https://my-json-server.typicode.com/turjoy-real/data/users\",\n      {\n        userName: userName,\n        age: age,\n        address: address,\n        activity: activity,\n      }\n    );\n\n    console.log(\"create\", response.data.id);\n\n    // if (!response.request._sent) {\n    //     throw new Error('Something went wrong!');\n    //   };\n\n    dispatch({\n      type: CREATE_USER,\n      // eid: response.data.name ,\n      eid: response.data.id,\n      userData: {\n        userName,\n        age,\n        address,\n        activity,\n      },\n    });\n  };\n};\n\nexport const updateUser = (id, userName, age, address, activity) => {\n  return async (dispatch) => {\n    const response = await axios.patch(\n      `https://my-json-server.typicode.com/turjoy-real/data/users/${id}`,\n      {\n        userName: userName,\n        age: age,\n        address: address,\n        activity: activity,\n      }\n    );\n    console.log(response);\n\n    console.log(\"update\", response.data.id);\n\n    // if (!response.request._sent) {\n    //     throw new Error('Something went wrong!');\n    //   };\n\n    dispatch({\n      type: UPDATE_USER,\n      // eid: response.data.name ,\n      eid: id,\n      userData: {\n        userName,\n        age,\n        address,\n        activity,\n      },\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
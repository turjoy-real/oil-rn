{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/turjoy/Desktop/Oil project/screens/AuthScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useReducer, useCallback } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { useDispatch } from \"react-redux\";\nimport AuthInput from \"../components/AuthInput\";\nimport Card from \"../components/UI/Card\";\nimport Colors from \"../constants/Colors\";\nimport * as authActions from \"../store/actions/auth\";\nvar FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues\n    };\n  }\n\n  return state;\n};\n\nvar AuthScreen = function AuthScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSignup = _useState6[0],\n      setIsSignup = _useState6[1];\n\n  var dispatch = useDispatch();\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      email: \"\",\n      password: \"\"\n    },\n    inputValidities: {\n      email: false,\n      password: false\n    },\n    formIsValid: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  useEffect(function () {\n    if (error) {\n      Alert.alert(\"An Error Occurred!\", error, [{\n        text: \"Okay\"\n      }]);\n    }\n  }, [error]);\n\n  var pwdCheck = function pwdCheck() {\n    Alert.alert(\"Passwords do not match!\", \"Please try again.\", [{\n      text: \"Okay\"\n    }]);\n  };\n\n  var authHandler = function authHandler() {\n    var action;\n    return _regeneratorRuntime.async(function authHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (isSignup) {\n              action = authActions.signup(formState.inputValues.email, formState.inputValues.password);\n            } else {\n              action = authActions.login(formState.inputValues.email, formState.inputValues.password);\n            }\n\n            setError(null);\n            setIsLoading(true);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(action));\n\n          case 6:\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](3);\n            setError(_context.t0.message);\n            setIsLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 8]], Promise);\n  };\n\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n  return React.createElement(KeyboardAvoidingView, {\n    keyboardVerticalOffset: 50,\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [\"#ffedff\", \"#ffe3ff\"],\n    style: styles.gradient,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    style: styles.authContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, React.createElement(AuthInput, {\n    id: \"email\",\n    label: \"E-Mail\",\n    keyboardType: \"email-address\",\n    required: true,\n    email: true,\n    autoCapitalize: \"none\",\n    errorText: \"Please enter a valid email address.\",\n    onInputChange: inputChangeHandler,\n    initialValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), React.createElement(AuthInput, {\n    id: \"password\",\n    label: \"Password\",\n    keyboardType: \"default\",\n    secureTextEntry: true,\n    required: true,\n    minLength: 5,\n    autoCapitalize: \"none\",\n    errorText: \"Please enter a valid password.\",\n    onInputChange: inputChangeHandler,\n    initialValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), isSignup ? React.createElement(AuthInput, {\n    id: \"password_confirm\",\n    label: \"Confirm Password\",\n    keyboardType: \"default\",\n    secureTextEntry: true,\n    required: true,\n    minLength: 5,\n    autoCapitalize: \"none\",\n    errorText: \"Please enter the same password.\",\n    onInputChange: inputChangeHandler,\n    initialValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }) : null, React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: Colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }) : React.createElement(Button, {\n    title: isSignup ? \"Sign Up\" : \"Login\",\n    color: Colors.primary,\n    onPress: isSignup ? formState.inputValues.password === formState.inputValues.password_confirm ? authHandler : pwdCheck : authHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Switch to \" + (isSignup ? \"Login\" : \"Sign Up\"),\n    color: Colors.accent,\n    onPress: function onPress() {\n      setIsSignup(function (prevState) {\n        return !prevState;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport var screenOptions = {\n  headerTitle: \"Supaprix\"\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  },\n  tinyLogo: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  gradient: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  authContainer: {\n    width: \"80%\",\n    maxWidth: 400,\n    maxHeight: \"80%\",\n    padding: 20\n  },\n  buttonContainer: {\n    marginTop: 10\n  }\n});\nexport default AuthScreen;","map":{"version":3,"sources":["/home/turjoy/Desktop/Oil project/screens/AuthScreen.js"],"names":["React","useState","useEffect","useReducer","useCallback","LinearGradient","useDispatch","AuthInput","Card","Colors","authActions","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","AuthScreen","isLoading","setIsLoading","error","setError","isSignup","setIsSignup","dispatch","email","password","formState","dispatchFormState","Alert","alert","text","pwdCheck","authHandler","signup","login","message","inputChangeHandler","inputIdentifier","inputValue","inputValidity","styles","screen","gradient","authContainer","buttonContainer","primary","password_confirm","accent","prevState","screenOptions","headerTitle","StyleSheet","create","flex","tinyLogo","justifyContent","alignItems","width","maxWidth","maxHeight","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useCallback } from \"react\";\n\nimport {\n  ScrollView,\n  View,\n  KeyboardAvoidingView,\n  StyleSheet,\n  Button,\n  ActivityIndicator,\n  Alert,\n} from \"react-native\";\n\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { useDispatch } from \"react-redux\";\n\nimport AuthInput from \"../components/AuthInput\";\nimport Card from \"../components/UI/Card\";\nimport Colors from \"../constants/Colors\";\nimport * as authActions from \"../store/actions/auth\";\n\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value,\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues,\n    };\n  }\n  return state;\n};\n\nconst AuthScreen = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      email: \"\",\n      password: \"\",\n    },\n    inputValidities: {\n      email: false,\n      password: false,\n    },\n    formIsValid: false,\n  });\n\n  useEffect(() => {\n    if (error) {\n      Alert.alert(\"An Error Occurred!\", error, [{ text: \"Okay\" }]);\n    }\n  }, [error]);\n\n  const pwdCheck = () => {\n    Alert.alert(\"Passwords do not match!\", \"Please try again.\", [\n      { text: \"Okay\" },\n    ]);\n  };\n\n  const authHandler = async () => {\n    let action;\n    if (isSignup) {\n      action = authActions.signup(\n        formState.inputValues.email,\n        formState.inputValues.password\n      );\n      // setNewUser(true);\n    } else {\n      action = authActions.login(\n        formState.inputValues.email,\n        formState.inputValues.password\n      );\n    }\n    setError(null);\n    setIsLoading(true);\n    try {\n      await dispatch(action);\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n    }\n  };\n\n  const inputChangeHandler = useCallback(\n    (inputIdentifier, inputValue, inputValidity) => {\n      dispatchFormState({\n        type: FORM_INPUT_UPDATE,\n        value: inputValue,\n        isValid: inputValidity,\n        input: inputIdentifier,\n      });\n    },\n    [dispatchFormState]\n  );\n\n  return (\n    <KeyboardAvoidingView\n      // behavior=\"padding\"\n      keyboardVerticalOffset={50}\n      style={styles.screen}\n    >\n      <LinearGradient colors={[\"#ffedff\", \"#ffe3ff\"]} style={styles.gradient}>\n        <Card style={styles.authContainer}>\n          <ScrollView>\n            <AuthInput\n              id=\"email\"\n              label=\"E-Mail\"\n              keyboardType=\"email-address\"\n              required\n              email\n              autoCapitalize=\"none\"\n              errorText=\"Please enter a valid email address.\"\n              onInputChange={inputChangeHandler}\n              initialValue=\"\"\n            />\n            <AuthInput\n              id=\"password\"\n              label=\"Password\"\n              keyboardType=\"default\"\n              secureTextEntry\n              required\n              minLength={5}\n              autoCapitalize=\"none\"\n              errorText=\"Please enter a valid password.\"\n              onInputChange={inputChangeHandler}\n              initialValue=\"\"\n            />\n            {isSignup ? (\n              <AuthInput\n                id=\"password_confirm\"\n                label=\"Confirm Password\"\n                keyboardType=\"default\"\n                secureTextEntry\n                required\n                minLength={5}\n                autoCapitalize=\"none\"\n                errorText=\"Please enter the same password.\"\n                onInputChange={inputChangeHandler}\n                initialValue=\"\"\n              />\n            ) : null}\n            <View style={styles.buttonContainer}>\n              {isLoading ? (\n                <ActivityIndicator size=\"small\" color={Colors.primary} />\n              ) : (\n                <Button\n                  title={isSignup ? \"Sign Up\" : \"Login\"}\n                  color={Colors.primary}\n                  onPress={\n                    isSignup\n                      ? formState.inputValues.password ===\n                        formState.inputValues.password_confirm\n                        ? authHandler\n                        : pwdCheck\n                      : authHandler\n                  }\n                />\n              )}\n            </View>\n            <View style={styles.buttonContainer}>\n              <Button\n                title={`Switch to ${isSignup ? \"Login\" : \"Sign Up\"}`}\n                color={Colors.accent}\n                onPress={() => {\n                  setIsSignup((prevState) => !prevState);\n                }}\n              />\n            </View>\n          </ScrollView>\n        </Card>\n      </LinearGradient>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport const screenOptions = {\n  headerTitle: \"Supaprix\",\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  tinyLogo: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  gradient: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  authContainer: {\n    width: \"80%\",\n    maxWidth: 400,\n    maxHeight: \"80%\",\n    padding: 20,\n  },\n  buttonContainer: {\n    marginTop: 10,\n  },\n});\n\nexport default AuthScreen;\n"]},"metadata":{},"sourceType":"module"}
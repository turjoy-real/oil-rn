{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/turjoy/Desktop/Oil project/navigation/DrawerNavigator.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator, DrawerItemList } from \"@react-navigation/drawer\";\nimport * as authActions from \"../store/actions/auth\";\nimport { useDispatch } from \"react-redux\";\nimport HomeScreen, { screenOptions as homeScreenOptions } from \"../screens/HomeScreen\";\nimport AuthScreen from \"../screens/AuthScreen\";\nimport EditUserProfileScreen, { screenOptions as editUserProfileOptions } from \"../screens/ProfileScreen\";\nimport { Ionicons, Entypo, MaterialIcons } from \"@expo/vector-icons\";\nimport Colors from \"../constants/Colors\";\nvar defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: Platform.OS === \"android\" ? Colors.primary : \"\"\n  },\n  headerTitleStyle: {\n    fontFamily: \"open-sans-bold\",\n    paddingLeft: 30\n  },\n  headerBackTitleStyle: {\n    fontFamily: \"open-sans\"\n  },\n  headerTintColor: Platform.OS === \"android\" ? \"white\" : Colors.primary\n};\nvar ClientsStackNavigator = createStackNavigator();\nexport var ClientsNavigator = function ClientsNavigator() {\n  return React.createElement(ClientsStackNavigator.Navigator, {\n    screenOptions: defaultNavOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(ClientsStackNavigator.Screen, {\n    name: \"Clients\",\n    component: HomeScreen,\n    options: homeScreenOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\nvar ProfileStackNavigator = createStackNavigator();\nexport var ProfileNavigator = function ProfileNavigator() {\n  return React.createElement(ProfileStackNavigator.Navigator, {\n    screenOptions: defaultNavOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileStackNavigator.Screen, {\n    name: \"Profile/Dashboard\",\n    component: EditUserProfileScreen,\n    options: editUserProfileOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\nvar DrawerNavigator = createDrawerNavigator();\nexport var Drawer = function Drawer() {\n  var dispatch = useDispatch();\n  return React.createElement(DrawerNavigator.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingTop: 40\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, React.createElement(DrawerItemList, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      })), React.createElement(Button, {\n        title: \"Logout\",\n        color: Colors.primary,\n        onPress: function onPress() {\n          dispatch(authActions.logout());\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }));\n    },\n    drawerContentOptions: {\n      activeTintColor: Colors.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(DrawerNavigator.Screen, {\n    name: \"Dashboard\",\n    component: ProfileNavigator,\n    options: {\n      drawerIcon: function drawerIcon(props) {\n        return React.createElement(Ionicons, {\n          name: Platform.OS === \"android\" ? \"md-list\" : \"ios-list\",\n          size: 23,\n          color: props.color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), React.createElement(DrawerNavigator.Screen, {\n    name: \"Clients\",\n    component: ClientsNavigator,\n    options: {\n      drawerIcon: function drawerIcon(props) {\n        return React.createElement(Entypo, {\n          name: \"home\",\n          size: 23,\n          color: props.color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), React.createElement(DrawerNavigator.Screen, {\n    name: \"Profile\",\n    component: ProfileNavigator,\n    options: {\n      drawerIcon: function drawerIcon(props) {\n        return React.createElement(MaterialIcons, {\n          name: \"account-circle\",\n          size: 23,\n          color: props.color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }));\n};\nvar AuthStackNavigator = createStackNavigator();\nexport var AuthNavigator = function AuthNavigator() {\n  return React.createElement(AuthStackNavigator.Navigator, {\n    screenOptions: defaultNavOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthStackNavigator.Screen, {\n    name: \"Auth\",\n    component: AuthScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/turjoy/Desktop/Oil project/navigation/DrawerNavigator.js"],"names":["React","createStackNavigator","createDrawerNavigator","DrawerItemList","authActions","useDispatch","HomeScreen","screenOptions","homeScreenOptions","AuthScreen","EditUserProfileScreen","editUserProfileOptions","Ionicons","Entypo","MaterialIcons","Colors","defaultNavOptions","headerStyle","backgroundColor","Platform","OS","primary","headerTitleStyle","fontFamily","paddingLeft","headerBackTitleStyle","headerTintColor","ClientsStackNavigator","ClientsNavigator","ProfileStackNavigator","ProfileNavigator","DrawerNavigator","Drawer","dispatch","props","flex","paddingTop","logout","activeTintColor","drawerIcon","color","AuthStackNavigator","AuthNavigator"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Button, Platform } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport {\n  createDrawerNavigator,\n  DrawerItemList,\n} from \"@react-navigation/drawer\";\nimport * as authActions from \"../store/actions/auth\";\n// import { DrawerActions } from '@react-navigation/native';\nimport { useDispatch } from \"react-redux\";\nimport HomeScreen, {\n  screenOptions as homeScreenOptions,\n} from \"../screens/HomeScreen\";\n\nimport AuthScreen from \"../screens/AuthScreen\";\n// import EditUserScreen from '../screens/EditUserScreen';\nimport EditUserProfileScreen, {\n  screenOptions as editUserProfileOptions,\n} from \"../screens/ProfileScreen\";\n\nimport { Ionicons, Entypo, MaterialIcons } from \"@expo/vector-icons\";\n\nimport Colors from \"../constants/Colors\";\n\nconst defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: Platform.OS === \"android\" ? Colors.primary : \"\",\n  },\n  headerTitleStyle: {\n    fontFamily: \"open-sans-bold\",\n    paddingLeft: 30,\n  },\n  headerBackTitleStyle: {\n    fontFamily: \"open-sans\",\n  },\n  headerTintColor: Platform.OS === \"android\" ? \"white\" : Colors.primary,\n};\n\nconst ClientsStackNavigator = createStackNavigator();\n\nexport const ClientsNavigator = () => {\n  return (\n    <ClientsStackNavigator.Navigator screenOptions={defaultNavOptions}>\n      <ClientsStackNavigator.Screen\n        name=\"Clients\"\n        component={HomeScreen}\n        options={homeScreenOptions}\n      />\n    </ClientsStackNavigator.Navigator>\n  );\n};\n\nconst ProfileStackNavigator = createStackNavigator();\n\nexport const ProfileNavigator = () => {\n  return (\n    <ProfileStackNavigator.Navigator screenOptions={defaultNavOptions}>\n      <ProfileStackNavigator.Screen\n        name=\"Profile/Dashboard\"\n        component={EditUserProfileScreen}\n        options={editUserProfileOptions}\n      />\n    </ProfileStackNavigator.Navigator>\n  );\n};\n\nconst DrawerNavigator = createDrawerNavigator();\n\nexport const Drawer = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <DrawerNavigator.Navigator\n      drawerContent={(props) => {\n        return (\n          <View style={{ flex: 1, paddingTop: 40 }}>\n            <DrawerItemList {...props} />\n\n            <Button\n              title=\"Logout\"\n              color={Colors.primary}\n              onPress={() => {\n                dispatch(authActions.logout());\n              }}\n            />\n          </View>\n        );\n      }}\n      drawerContentOptions={{\n        activeTintColor: Colors.primary,\n      }}\n    >\n      <DrawerNavigator.Screen\n        name=\"Dashboard\"\n        component={ProfileNavigator}\n        options={{\n          drawerIcon: (props) => (\n            <Ionicons\n              name={Platform.OS === \"android\" ? \"md-list\" : \"ios-list\"}\n              size={23}\n              color={props.color}\n            />\n          ),\n        }}\n      />\n\n      <DrawerNavigator.Screen\n        name=\"Clients\"\n        component={ClientsNavigator}\n        options={{\n          drawerIcon: (props) => (\n            <Entypo name=\"home\" size={23} color={props.color} />\n          ),\n        }}\n      />\n\n      <DrawerNavigator.Screen\n        name=\"Profile\"\n        component={ProfileNavigator}\n        options={{\n          drawerIcon: (props) => (\n            <MaterialIcons\n              name=\"account-circle\"\n              size={23}\n              color={props.color}\n            />\n          ),\n        }}\n      />\n    </DrawerNavigator.Navigator>\n  );\n};\n\n// Login/Signup Navigator\nconst AuthStackNavigator = createStackNavigator();\n\nexport const AuthNavigator = () => {\n  return (\n    <AuthStackNavigator.Navigator screenOptions={defaultNavOptions}>\n      <AuthStackNavigator.Screen name=\"Auth\" component={AuthScreen} />\n    </AuthStackNavigator.Navigator>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
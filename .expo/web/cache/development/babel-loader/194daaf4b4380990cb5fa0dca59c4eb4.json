{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport Clients from \"../../models/Client\";\nexport var SET_CLIENTS = \"SET_CLIENTS\";\nexport var CREATE_CLIENT = \"CREATE_CLIENT\";\nexport var UPDATE_CLIENT = \"UPDATE_CLIENT\";\nexport var fetchClients = function fetchClients() {\n  return function _callee(dispatch) {\n    var response, resData, loadedClients, key;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"https://my-json-server.typicode.com/turjoy-real/data/clients\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.data);\n\n          case 6:\n            resData = _context.sent;\n            console.log(resData);\n            console.log(Date());\n            loadedClients = [];\n\n            for (key in resData) {\n              loadedClients.push(new Clients(key, resData[key].userName, resData[key].phoneNumber, resData[key].companyName, resData[key].address, resData[key].dateJoined));\n            }\n\n            dispatch({\n              type: SET_CLIENTS,\n              clients: loadedClients\n            });\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n};\nexport var createClient = function createClient(clientName, phoneNumber, companyName, address, dateJoined) {\n  return function _callee2(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"https://my-json-server.typicode.com/turjoy-real/data/clients\", {\n              userName: clientName,\n              phoneNumber: phoneNumber,\n              companyName: companyName,\n              address: address,\n              dateJoined: dateJoined\n            }));\n\n          case 2:\n            response = _context2.sent;\n            dispatch({\n              type: CREATE_CLIENT,\n              eid: response.data.id,\n              clientData: {\n                clientName: clientName,\n                phoneNumber: phoneNumber,\n                companyName: companyName,\n                address: address,\n                dateJoined: dateJoined\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var updateClient = function updateClient(id, clientName, phoneNumber, companyName, address, dateJoined) {\n  return function _callee3(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(axios.patch(\"https://my-json-server.typicode.com/turjoy-real/data/clients/\" + id, {\n              clientName: clientName,\n              phoneNumber: phoneNumber,\n              companyName: companyName,\n              address: address,\n              dateJoined: dateJoined\n            }));\n\n          case 2:\n            response = _context3.sent;\n            dispatch({\n              type: UPDATE_CLIENT,\n              eid: id,\n              clientData: {\n                clientName: clientName,\n                phoneNumber: phoneNumber,\n                companyName: companyName,\n                address: address,\n                dateJoined: dateJoined\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/turjoy/Desktop/Oil project/store/actions/clients.js"],"names":["axios","Clients","SET_CLIENTS","CREATE_CLIENT","UPDATE_CLIENT","fetchClients","dispatch","get","response","data","resData","console","log","Date","loadedClients","key","push","userName","phoneNumber","companyName","address","dateJoined","type","clients","createClient","clientName","post","eid","id","clientData","updateClient","patch"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Clients from \"../../models/Client\";\n\nexport const SET_CLIENTS = \"SET_CLIENTS\";\nexport const CREATE_CLIENT = \"CREATE_CLIENT\";\nexport const UPDATE_CLIENT = \"UPDATE_CLIENT\";\n\nexport const fetchClients = () => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(\n        \"https://my-json-server.typicode.com/turjoy-real/data/clients\"\n      );\n\n      const resData = await response.data;\n\n      console.log(resData);\n      console.log(Date());\n\n      const loadedClients = [];\n\n      for (const key in resData) {\n        loadedClients.push(\n          new Clients(\n            key,\n            resData[key].userName,\n            resData[key].phoneNumber,\n            resData[key].companyName,\n            resData[key].address,\n            resData[key].dateJoined\n          )\n        );\n      }\n\n      dispatch({\n        type: SET_CLIENTS,\n        clients: loadedClients,\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n};\n\nexport const createClient = (\n  clientName,\n  phoneNumber,\n  companyName,\n  address,\n  dateJoined\n) => {\n  return async (dispatch) => {\n    const response = await axios.post(\n      \"https://my-json-server.typicode.com/turjoy-real/data/clients\",\n      {\n        userName: clientName,\n        phoneNumber: phoneNumber,\n        companyName: companyName,\n        address: address,\n        dateJoined: dateJoined,\n      }\n    );\n\n    // console.log(\"create\", response.data.id);\n\n    // if (!response.request._sent) {\n    //     throw new Error('Something went wrong!');\n    //   };\n\n    dispatch({\n      type: CREATE_CLIENT,\n      // eid: response.data.name ,\n      eid: response.data.id,\n      clientData: {\n        clientName,\n        phoneNumber,\n        companyName,\n        address,\n        dateJoined,\n      },\n    });\n  };\n};\n\nexport const updateClient = (\n  id,\n  clientName,\n  phoneNumber,\n  companyName,\n  address,\n  dateJoined\n) => {\n  return async (dispatch) => {\n    const response = await axios.patch(\n      `https://my-json-server.typicode.com/turjoy-real/data/clients/${id}`,\n      {\n        clientName: clientName,\n        phoneNumber: phoneNumber,\n        companyName: companyName,\n        address: address,\n        dateJoined: dateJoined,\n      }\n    );\n    // console.log(response);\n\n    // console.log(\"update\", response.data.id);\n\n    // if (!response.request._sent) {\n    //     throw new Error('Something went wrong!');\n    //   };\n\n    dispatch({\n      type: UPDATE_CLIENT,\n      // eid: response.data.name ,\n      eid: id,\n      clientData: {\n        clientName,\n        phoneNumber,\n        companyName,\n        address,\n        dateJoined,\n      },\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
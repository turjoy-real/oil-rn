{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/turjoy/Desktop/Oil project/App.js\";\nimport React, { useState } from \"react\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport AppNavigator from \"./navigation/AppNavigator\";\nimport userReducer from \"./store/reducers/users\";\nimport authReducer from \"./store/reducers/auth\";\nimport formReducer from \"./store/reducers/form\";\nimport clientReducer from \"./store/reducers/clients\";\nvar rootReducer = combineReducers({\n  users: userReducer,\n  auth: authReducer,\n  form: formReducer,\n  clients: clientReducer\n});\nvar store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        setFontLoaded(true);\n      },\n      onError: console.warn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(AppNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/turjoy/Desktop/Oil project/App.js"],"names":["React","useState","createStore","combineReducers","applyMiddleware","Provider","ReduxThunk","AppLoading","Font","AppNavigator","userReducer","authReducer","formReducer","clientReducer","rootReducer","users","auth","form","clients","store","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoaded","console","warn"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,WAAW,GAAGX,eAAe,CAAC;AAClCY,EAAAA,KAAK,EAAEL,WAD2B;AAElCM,EAAAA,IAAI,EAAEL,WAF4B;AAGlCM,EAAAA,IAAI,EAAEL,WAH4B;AAIlCM,EAAAA,OAAO,EAAEL;AAJyB,CAAD,CAAnC;AAOA,IAAMM,KAAK,GAAGjB,WAAW,CAACY,WAAD,EAAcV,eAAe,CAACE,UAAD,CAA7B,CAAzB;;AAEA,IAAMc,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SAAOZ,IAAI,CAACa,SAAL,CAAe;AACpB,iBAAaC,OAAO,uCADA;AAEpB,sBAAkBA,OAAO;AAFL,GAAf,CAAP;AAID,CALD;;AAOA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAoCtB,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOuB,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,UADd;AAEE,MAAA,QAAQ,EAAE,oBAAM;AACdK,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAJH;AAKE,MAAA,OAAO,EAAEC,OAAO,CAACC,IALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AACD,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\n\nimport AppNavigator from \"./navigation/AppNavigator\";\nimport userReducer from \"./store/reducers/users\";\nimport authReducer from \"./store/reducers/auth\";\nimport formReducer from \"./store/reducers/form\";\nimport clientReducer from \"./store/reducers/clients\";\n\nconst rootReducer = combineReducers({\n  users: userReducer,\n  auth: authReducer,\n  form: formReducer,\n  clients: clientReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nconst fetchFonts = () => {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\"),\n  });\n};\n\nexport default function App() {\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  if (!fontLoaded) {\n    return (\n      <AppLoading\n        startAsync={fetchFonts}\n        onFinish={() => {\n          setFontLoaded(true);\n        }}\n        onError={console.warn}\n      />\n    );\n  }\n  return (\n    <Provider store={store}>\n      <AppNavigator />\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
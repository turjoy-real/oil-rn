{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/turjoy/Desktop/Oil project/screens/ProfileScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useCallback, useReducer } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Colors from \"../constants/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nvar FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues\n    };\n  }\n\n  return state;\n};\n\nvar EditUserProfileScreen = function EditUserProfileScreen(props) {\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"Edit Profile Screen\");\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: \"User Profile\",\n    headerLeft: function headerLeft() {\n      return React.createElement(Ionicons.Button, {\n        name: Platform.OS === \"android\" ? \"md-menu\" : \"ios-menu\",\n        backgroundColor: Colors.primary,\n        color: Platform.OS === \"android\" ? \"white\" : Colors.primary,\n        size: 28,\n        onPress: function onPress() {\n          return navData.navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      });\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  form: {\n    margin: 20\n  },\n  centered: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default EditUserProfileScreen;","map":{"version":3,"sources":["/home/turjoy/Desktop/Oil project/screens/ProfileScreen.js"],"names":["React","useState","useEffect","useCallback","useReducer","useSelector","useDispatch","Colors","Ionicons","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","EditUserProfileScreen","props","screenOptions","navData","headerTitle","headerLeft","Platform","OS","primary","navigation","toggleDrawer","styles","StyleSheet","create","form","margin","centered","flex","justifyContent","alignItems"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,UAAlD,QAAoE,OAApE;;;;;;;;;;AAaA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,OAAOC,MAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,IAAMC,iBAAiB,GAAG,mBAA1B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgBJ,iBAApB,EAAuC;AACrC,QAAMK,aAAa,mCACdH,KAAK,CAACI,WADQ,2BAEhBH,MAAM,CAACI,KAFS,EAEDJ,MAAM,CAACK,KAFN,EAAnB;;AAIA,QAAMC,iBAAiB,mCAClBP,KAAK,CAACQ,eADY,2BAEpBP,MAAM,CAACI,KAFa,EAELJ,MAAM,CAACQ,OAFF,EAAvB;;AAIA,QAAIC,kBAAkB,GAAG,IAAzB;;AACA,SAAK,IAAMC,GAAX,IAAkBJ,iBAAlB,EAAqC;AACnCG,MAAAA,kBAAkB,GAAGA,kBAAkB,IAAIH,iBAAiB,CAACI,GAAD,CAA5D;AACD;;AACD,WAAO;AACLC,MAAAA,WAAW,EAAEF,kBADR;AAELF,MAAAA,eAAe,EAAED,iBAFZ;AAGLH,MAAAA,WAAW,EAAED;AAHR,KAAP;AAKD;;AACD,SAAOH,KAAP;AACD,CArBD;;AAuBA,IAAMa,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AACvC,SAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF;AAID,CALD;;AAOA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACxC,SAAO;AACLC,IAAAA,WAAW,EAAE,cADR;AAELC,IAAAA,UAAU,EAAE;AAAA,aACV,oBAAC,QAAD,CAAU,MAAV;AACE,QAAA,IAAI,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,SAA5B,GAAwC,UADhD;AAEE,QAAA,eAAe,EAAExB,MAAM,CAACyB,OAF1B;AAGE,QAAA,KAAK,EAAEF,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,OAA5B,GAAsCxB,MAAM,CAACyB,OAHtD;AAIE,QAAA,IAAI,EAAE,EAJR;AAKE,QAAA,OAAO,EAAE;AAAA,iBAAML,OAAO,CAACM,UAAR,CAAmBC,YAAnB,EAAN;AAAA,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA;AAFP,GAAP;AAYD,CAbM;AAeP,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GADyB;AAI/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,cAAc,EAAE,QAFR;AAGRC,IAAAA,UAAU,EAAE;AAHJ;AAJqB,CAAlB,CAAf;AAWA,eAAenB,qBAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useReducer } from \"react\";\nimport {\n  Text,\n  View,\n  Image,\n  ScrollView,\n  StyleSheet,\n  Platform,\n  Alert,\n  KeyboardAvoidingView,\n  ActivityIndicator,\n} from \"react-native\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// import * as accountsActions from '../../store/actions/accounts';\n// import Input from '../../components/UI/Input';\nimport Colors from \"../constants/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value,\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues,\n    };\n  }\n  return state;\n};\n\nconst EditUserProfileScreen = (props) => {\n  return (\n    // stuff to Add\n    <Text>Edit Profile Screen</Text>\n  );\n};\n\nexport const screenOptions = (navData) => {\n  return {\n    headerTitle: \"User Profile\",\n    headerLeft: () => (\n      <Ionicons.Button\n        name={Platform.OS === \"android\" ? \"md-menu\" : \"ios-menu\"}\n        backgroundColor={Colors.primary}\n        color={Platform.OS === \"android\" ? \"white\" : Colors.primary}\n        size={28}\n        onPress={() => navData.navigation.toggleDrawer()}\n      />\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  form: {\n    margin: 20,\n  },\n  centered: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nexport default EditUserProfileScreen;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_CLIENTS, CREATE_CLIENT, UPDATE_CLIENT } from \"../actions/clients\";\nimport Client from \"../../models/Client\";\nvar initialState = {\n  currentClients: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_CLIENTS:\n      return {\n        currentClients: action.clients\n      };\n\n    case CREATE_CLIENT:\n      var newClient = new Client(action.eid, action.clientData.clientName, action.clientData.phoneNumber, action.clientData.companyName, action.clientData.address, action.clientData.dateJoined);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentClients: state.currentClients.concat(newClient)\n      });\n\n    case UPDATE_CLIENT:\n      var clientIndex = state.currentClients.findIndex(function (emp) {\n        return emp.id === action.eid;\n      });\n      var updatedClient = new Client(action.eid, action.clientData.clientName, action.clientData.phoneNumber, action.clientData.companyName, action.clientData.address, action.clientData.dateJoined);\n\n      var updatedCurrentClients = _toConsumableArray(state.currentClients);\n\n      updatedCurrentClients[clientIndex] = updatedClient;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentClients: updatedCurrentClients\n      });\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/home/turjoy/Desktop/Oil project/store/reducers/clients.js"],"names":["SET_CLIENTS","CREATE_CLIENT","UPDATE_CLIENT","Client","initialState","currentClients","state","action","type","clients","newClient","eid","clientData","clientName","phoneNumber","companyName","address","dateJoined","concat","clientIndex","findIndex","emp","id","updatedClient","updatedCurrentClients"],"mappings":";;;;;;;AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC;AACA,OAAOC,MAAP;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE;AADG,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE,aAAO;AACLK,QAAAA,cAAc,EAAEE,MAAM,CAACE;AADlB,OAAP;;AAIF,SAAKR,aAAL;AACE,UAAMS,SAAS,GAAG,IAAIP,MAAJ,CAChBI,MAAM,CAACI,GADS,EAEhBJ,MAAM,CAACK,UAAP,CAAkBC,UAFF,EAGhBN,MAAM,CAACK,UAAP,CAAkBE,WAHF,EAIhBP,MAAM,CAACK,UAAP,CAAkBG,WAJF,EAKhBR,MAAM,CAACK,UAAP,CAAkBI,OALF,EAMhBT,MAAM,CAACK,UAAP,CAAkBK,UANF,CAAlB;AASA,6CACKX,KADL;AAEED,QAAAA,cAAc,EAAEC,KAAK,CAACD,cAAN,CAAqBa,MAArB,CAA4BR,SAA5B;AAFlB;;AAKF,SAAKR,aAAL;AACE,UAAMiB,WAAW,GAAGb,KAAK,CAACD,cAAN,CAAqBe,SAArB,CAClB,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,EAAJ,KAAWf,MAAM,CAACI,GAA3B;AAAA,OADkB,CAApB;AAIA,UAAMY,aAAa,GAAG,IAAIpB,MAAJ,CACpBI,MAAM,CAACI,GADa,EAEpBJ,MAAM,CAACK,UAAP,CAAkBC,UAFE,EAGpBN,MAAM,CAACK,UAAP,CAAkBE,WAHE,EAIpBP,MAAM,CAACK,UAAP,CAAkBG,WAJE,EAKpBR,MAAM,CAACK,UAAP,CAAkBI,OALE,EAMpBT,MAAM,CAACK,UAAP,CAAkBK,UANE,CAAtB;;AASA,UAAMO,qBAAqB,sBAAOlB,KAAK,CAACD,cAAb,CAA3B;;AACAmB,MAAAA,qBAAqB,CAACL,WAAD,CAArB,GAAqCI,aAArC;AAEA,6CACKjB,KADL;AAEED,QAAAA,cAAc,EAAEmB;AAFlB;AAtCJ;;AA2CA,SAAOlB,KAAP;AACD,CA7CD","sourcesContent":["import { SET_CLIENTS, CREATE_CLIENT, UPDATE_CLIENT } from \"../actions/clients\";\nimport Client from \"../../models/Client\";\n\nconst initialState = {\n  currentClients: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CLIENTS:\n      return {\n        currentClients: action.clients,\n      };\n\n    case CREATE_CLIENT:\n      const newClient = new Client(\n        action.eid,\n        action.clientData.clientName,\n        action.clientData.phoneNumber,\n        action.clientData.companyName,\n        action.clientData.address,\n        action.clientData.dateJoined\n      );\n\n      return {\n        ...state,\n        currentClients: state.currentClients.concat(newClient),\n      };\n\n    case UPDATE_CLIENT:\n      const clientIndex = state.currentClients.findIndex(\n        (emp) => emp.id === action.eid\n      );\n\n      const updatedClient = new Client(\n        action.eid,\n        action.clientData.clientName,\n        action.clientData.phoneNumber,\n        action.clientData.companyName,\n        action.clientData.address,\n        action.clientData.dateJoined\n      );\n\n      const updatedCurrentClients = [...state.currentClients];\n      updatedCurrentClients[clientIndex] = updatedClient;\n\n      return {\n        ...state,\n        currentClients: updatedCurrentClients,\n      };\n  }\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}